class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        // int n = nums1.length;
        // int nge[] = new int[n];
        // Stack < Integer > st = new Stack < > ();
        // for (int i = 2 * n - 1; i >= 0; i--) {
        //     while (st.isEmpty() == false && st.peek() <= nums[i % n]) {
        //         st.pop();
        //     }

        //     if (i < n) {
        //         if (st.isEmpty() == false) nge[i] = st.peek();
        //         else nge[i] = -1;
        //     }

        //     st.push(nums[i % n]);
        // }
        // return nge;
        int n = nums1.length;
        int m = nums2.length;
        int ans[] = new int[n];
        Arrays.fill(ans,-1);
        for(int i=0;i<n;i++){
            int ind=-1;
            for(int j=0;j<m;j++){
                if(nums1[i] == nums2[j]){
                    ind = j;
                    break;
                }
            }
            if(ind !=-1){
                for(int j=ind+1;j<m;j++){
                    if(nums2[j]>nums1[i]){
                        ans[i] = nums2[j];
                        break;
                    }
                }
            }
        }
        return ans;
    }
    
}
