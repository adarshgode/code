import java.util.*;
class Solution {
    public int largestRectangleArea(int[] arr) {
        int maxAns = 0;
        int []ps=prevSmaller(arr);
        int []ns = nextSmaller(arr);
        for(int i=0;i<arr.length;i++){
            maxAns = Math.max(maxAns,arr[i]*(ns[i]-ps[i]-1));
        }
        return maxAns;
    }
    int[] prevSmaller(int[] arr){
        int ps[] = new int[arr.length];
        Stack<Integer> st = new Stack<Integer>();
        for(int i=0;i<arr.length;i++){
            while(!st.isEmpty() && arr[st.peek()]>= arr[i]){
                st.pop();
            }
            if(st.isEmpty()){
                ps[i] = -1;
            }else{
                ps[i] = st.peek();
            }
            st.push(i);
        }
        return ps;
    }

    
    int[] nextSmaller(int[] arr){
        int ns[] = new int[arr.length];
        Stack<Integer> st = new Stack<Integer>();
        for(int i=arr.length-1;i>=0;i--){
            while(!st.isEmpty() && arr[st.peek()]>= arr[i]){
                st.pop();
            }
            if(st.isEmpty()){
                ns[i] = arr.length;
            }else{
                ns[i] = st.peek();
            }
            st.push(i);
        }
        return ns;
    }
    
}
