class Solution {
    public int trap(int[] height) {
       int n = height.length;
       int pref[] = new int[n];
       int suf[] = new int[n];
       pref[0] = height[0];
       suf[n-1] = height[n-1];
       for(int i=1;i<n;i++){
        if(height[i]>pref[i-1]){
            pref[i] = height[i];
        }
        else{
            pref[i] = pref[i-1];
        }
       } 
       for(int i=n-2;i>=0;i--){
        if(height[i]>suf[i+1]){
            suf[i] = height[i];
        }
        else{
            suf[i] = suf[i+1];
        }
       }
       int sum=0;
       for(int i=0;i<n;i++){
        if(height[i]<pref[i] && height[i]<suf[i]){
            sum +=  Math.min(pref[i],suf[i]) - height[i];
        }
       }
       return sum;
    }
}
