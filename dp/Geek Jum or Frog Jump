class Solution{
    public static int solve(int[] arr,int n,int[] dp){
        if(n==0){
            return 0;
        }
        if(dp[n] != -1){
            return dp[n];
        }
        int jumpTwo = Integer.MAX_VALUE;
        int jumpOne = solve(arr,n-1,dp)+Math.abs(arr[n]-arr[n-1]);
        if(n>1){
            jumpTwo = solve(arr,n-2,dp)+Math.abs(arr[n]-arr[n-2]);
        }
        return dp[n] = Math.min(jumpOne,jumpTwo);
    }
    public int minimumEnergy(int arr[],int N){
        int[] dp = new int[N];
        Arrays.fill(dp,-1);
        return solve(arr,N-1,dp);
    }
}
