class Solution {
    public boolean canPartition(int[] nums) {
        int sum = 0;
        for(int i=0;i<nums.length;i++){
            sum += nums[i];
        }
        if(sum % 2 == 1) return false;
        else{
           return f(nums.length,sum/2,nums);
        }
    }
    boolean f(int n,int k,int[] arr){
        boolean prev[] = new boolean[k+1];
        prev[0] = true;
        if(arr[0] <= k) prev[arr[0]] = true;

        for(int i=1;i<n;i++){
            boolean cur[] = new boolean[k+1];
            cur[0] = true;
            for(int target = 1;target<=k;target++){
                boolean notTaken = prev[target];
                boolean take = false;
                if(arr[i]<=target){
                    take = prev[target-arr[i]];
                }
                cur[target] = notTaken || take;
            }
            prev = cur.clone();
        }
        return prev[k];
    }
}
