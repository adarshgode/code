import java.util.* ;
import java.io.*; 
public class Solution {
    public static boolean subsetSumToK(int n, int k, int arr[]){
        int[][] dp = new int[n][k+1];
        for(int row[] : dp){
            Arrays.fill(row,-1);
        }
        return f(n-1,k,arr,dp);
    }
    public static boolean f(int ind,int k,int arr[],int[][] dp){
        if(k == 0){
            return true;
        }
        if(ind == 0){
            return (arr[0] == k);
        }
        if(dp[ind][k] != -1) return dp[ind][k] == 0 ? false : true;
        boolean notTake = f(ind-1,k,arr,dp);
        boolean take = false;
        if(arr[ind]<=k) {
            take = f(ind-1,k-arr[ind],arr,dp);
        }
        dp[ind][k] = (notTake || take) == true ? 1 : 0;
        return (notTake || take);
    }

}
