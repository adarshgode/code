import java.io.*;
import java.util.*;
class Solution {
    public String removeOuterParentheses(String s) {
        Stack<Character> st = new Stack<>();
        StringBuilder sb = new StringBuilder();
        for(int i=0;i<s.length();i++){
            char ch = s.charAt(i);
            if(ch == '('){
                if(st.size()>0){
                    sb.append(ch);
                }
                st.push(ch);
            }else{
                st.pop();
                if(st.size()>0){
                    sb.append(ch);
                }
                
            }
        }
        return sb.toString();
    }
}

//using count variable
class Solution {
    public String removeOuterParentheses(String s) {
       StringBuilder sb = new StringBuilder();
       int count = 0;
       for(int i=0;i<s.length();i++){
        char t = s.charAt(i);
        if(count==0 && t=='('){
            count++;
        }
        else if(t == '('){
            count++;
            sb.append(t);
        }else{
            count--;
            if(count != 0){
                sb.append(t);
            }
        }
       } 
     return sb.toString();
    }
}


//same as above 
class Solution {
    public String removeOuterParentheses(String s) {
       StringBuilder sb = new StringBuilder();
       Stack<Character> st = new Stack<>();
       for(int i=0;i<s.length();i++){
        char t = s.charAt(i);
        if(st.isEmpty() && t=='('){
            st.push(t);
        }
        else if(t == '('){
            st.push(t);
            sb.append(t);
        }else{
            st.pop();
            if(!st.isEmpty()){
                sb.append(t);
            }
        }
       } 
     return sb.toString();
    }
   
}
